// /api/services/reportGenerator.js

/**
 * Generates a clean HTML report for a given vehicle‚Äôs data.
 * Works with the Carsaavy backend flow:
 * 1Ô∏è‚É£ /api/generate-report.js calls this function after fetching data
 * 2Ô∏è‚É£ HTML is either emailed or later converted into a PDF
 */

const fs = require('fs');
const path = require('path');

// ---------- Helper: safely handle missing values ----------
function safe(value, fallback = 'N/A') {
  return value && value !== '0' ? value : fallback;
}

// ---------- Core HTML generator ----------
function generateHTMLReport(vehicleData) {
  const { vin, sections } = vehicleData;
  const { specs, recalls, history, pricing, repairs } = sections;

  // Console log for observability
  console.log(`üßæ [ReportGenerator] Building report for VIN ${vin}`);

  // ---------- Build HTML ----------
  const html = `
  <html>
    <head>
      <meta charset="UTF-8" />
      <title>Vehicle Report - ${safe(vin)}</title>
      <style>
        body {
          font-family: 'Segoe UI', sans-serif;
          margin: 0;
          padding: 20px;
          color: #222;
          background: #f8f9fb;
        }
        .report-container {
          background: #fff;
          padding: 30px;
          border-radius: 16px;
          max-width: 800px;
          margin: auto;
          box-shadow: 0 4px 20px rgba(0,0,0,0.05);
        }
        h1, h2 {
          color: #2b3e50;
        }
        section {
          margin-bottom: 30px;
        }
        table {
          width: 100%;
          border-collapse: collapse;
          margin-top: 10px;
        }
        th, td {
          border: 1px solid #ddd;
          padding: 10px;
        }
        th {
          background: #f0f2f5;
          text-align: left;
        }
        .highlight {
          background: #e9f7ef;
          color: #1a6f3c;
          padding: 5px 10px;
          border-radius: 8px;
        }
        .alert {
          background: #fff3cd;
          color: #856404;
          padding: 8px 12px;
          border-radius: 8px;
        }
        .footer {
          margin-top: 40px;
          text-align: center;
          font-size: 0.9em;
          color: #555;
        }
      </style>
    </head>
    <body>
      <div class="report-container">
        <h1>Vehicle Report</h1>
        <p><strong>VIN:</strong> ${safe(vin)}</p>
        <p><strong>Generated:</strong> ${new Date().toLocaleString()}</p>

        <section>
          <h2>Vehicle Specifications</h2>
          <table>
            <tr><th>Make</th><td>${safe(specs?.data?.make)}</td></tr>
            <tr><th>Model</th><td>${safe(specs?.data?.model)}</td></tr>
            <tr><th>Year</th><td>${safe(specs?.data?.year)}</td></tr>
            <tr><th>Body</th><td>${safe(specs?.data?.body)}</td></tr>
            <tr><th>Engine</th><td>${safe(specs?.data?.engine)}</td></tr>
          </table>
        </section>

        <section>
          <h2>Open Recalls</h2>
          ${
            recalls?.data?.length
              ? `<ul>${recalls.data.map(r => `<li>${r}</li>`).join('')}</ul>`
              : `<div class="highlight">No recalls found.</div>`
          }
        </section>

        <section>
          <h2>Ownership & History</h2>
          <p>${safe(history?.data?.summary)}</p>
        </section>

        <section>
          <h2>Market Pricing Estimate</h2>
          ${
            pricing?.data
              ? `<div class="highlight">
                   Estimated Market Range: $${pricing.data.low} - $${pricing.data.high}
                 </div>`
              : `<div class="alert">Pricing data unavailable.</div>`
          }
        </section>

        <section>
          <h2>Repair & Maintenance Estimates</h2>
          ${
            repairs?.data?.length
              ? `<ul>${repairs.data.map(r => `<li>${r}</li>`).join('')}</ul>`
              : `<div class="highlight">No repair estimates available.</div>`
          }
        </section>

        <div class="footer">
          <p>This report was generated by <strong>CarSaavy</strong>.</p>
          <p>Use this document when negotiating with dealerships or verifying a car‚Äôs condition.</p>
        </div>
      </div>
    </body>
  </html>
  `;

  console.log(`‚úÖ [ReportGenerator] Report generated for VIN ${vin}`);
  return html;
}

// ---------- Wrapper for backend integration ----------
async function generateReport(vehicleData) {
  const html = generateHTMLReport(vehicleData);

  // Save temporary HTML (useful for debug or email attachment)
  const filePath = path.join('/tmp', `${vehicleData.vin}-report.html`);
  fs.writeFileSync(filePath, html, 'utf8');

  return filePath; // send this path to emailService
}

module.exports = { generateReport };